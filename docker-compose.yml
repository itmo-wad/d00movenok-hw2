version: '3.5'

services:
  front:
    build:
      context: .
      dockerfile: ./docker/front/Dockerfile
    restart: unless-stopped
    ports:
      - "8000:80"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider front:80/api/healthcheck/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - MONGO_USER=root
      - MONGO_PASS=replace_me
      - AVATARS_STORAGE=/avatars
    volumes:
      - ./backend:/backend
      - ./data/avatars:/avatars
    restart: unless-stopped
    healthcheck:
      test: wget --no-verbose --tries=1 --spider backend:8000/api/healthcheck/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:5
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: replace_me
    volumes:
      - ./data/mongo:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
